[{"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\index.js":"1","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\reportWebVitals.js":"2","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\App.js":"3","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\Login.page.js":"4","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\Homepage.page.js":"5","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\Signup.page.js":"6","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\Header.component.jsx":"7","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\store.js":"8","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\root-reducer.js":"9","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\accounts\\accounts.reducer.js":"10","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\accounts\\accounts.constants.js":"11","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\accounts\\accounts.actions.js":"12","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\utils\\jwt.js":"13","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\CreateMemoryShortcut.component.jsx":"14","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\RandomMemory.component.jsx":"15","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\EditMemory.page.js":"16","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\memories.constants.js":"17","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\memories.actions.js":"18","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\utils\\history.js":"19","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\UserMemories.page.js":"20","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\index.js":"21","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\usersMemories.reducer.js":"22","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\memories.reducer.js":"23","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\createMemory.reducer.js":"24","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\actions\\index.js":"25","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\actions\\getMemory.js":"26","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\DeleteMemoryButton.component.jsx":"27","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\actions\\deleteMemory.js":"28"},{"size":597,"mtime":1608302477007,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1607696967003,"results":"31","hashOfConfig":"30"},{"size":1160,"mtime":1608482524461,"results":"32","hashOfConfig":"30"},{"size":2481,"mtime":1608306715568,"results":"33","hashOfConfig":"30"},{"size":379,"mtime":1608333671496,"results":"34","hashOfConfig":"30"},{"size":4352,"mtime":1608305778463,"results":"35","hashOfConfig":"30"},{"size":1838,"mtime":1608547309816,"results":"36","hashOfConfig":"30"},{"size":725,"mtime":1608482609355,"results":"37","hashOfConfig":"30"},{"size":431,"mtime":1608554068193,"results":"38","hashOfConfig":"30"},{"size":1221,"mtime":1608307151229,"results":"39","hashOfConfig":"30"},{"size":327,"mtime":1608302537497,"results":"40","hashOfConfig":"30"},{"size":2801,"mtime":1608547258804,"results":"41","hashOfConfig":"30"},{"size":1050,"mtime":1608331816675,"results":"42","hashOfConfig":"30"},{"size":1677,"mtime":1608554908050,"results":"43","hashOfConfig":"30"},{"size":1003,"mtime":1608334403883,"results":"44","hashOfConfig":"30"},{"size":3529,"mtime":1608566451987,"results":"45","hashOfConfig":"30"},{"size":1231,"mtime":1608555809287,"results":"46","hashOfConfig":"30"},{"size":2668,"mtime":1608564408194,"results":"47","hashOfConfig":"30"},{"size":168,"mtime":1608481617442,"results":"48","hashOfConfig":"30"},{"size":1294,"mtime":1608553690640,"results":"49","hashOfConfig":"30"},{"size":363,"mtime":1608554081864,"results":"50","hashOfConfig":"30"},{"size":1140,"mtime":1608554037489,"results":"51","hashOfConfig":"30"},{"size":1431,"mtime":1608566309287,"results":"52","hashOfConfig":"30"},{"size":632,"mtime":1608553817659,"results":"53","hashOfConfig":"30"},{"size":106,"mtime":1608566051007,"results":"54","hashOfConfig":"30"},{"size":1248,"mtime":1608564649104,"results":"55","hashOfConfig":"30"},{"size":767,"mtime":1608566161117,"results":"56","hashOfConfig":"30"},{"size":1353,"mtime":1608566611754,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"q75qcj",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\index.js",[],["123","124"],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\reportWebVitals.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\App.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\Login.page.js",["125"],"import React, {useState, useEffect} from 'react'\r\nimport {loginUser} from \"../redux/accounts/accounts.actions\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\n\r\nimport \"../styles/components/login.scss\"\r\n\r\nconst LoginPage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const loginErrors = useSelector(({accountsReducer}) => accountsReducer.loginErrors)\r\n    const isLoggingIn = useSelector(({accountsReducer}) => accountsReducer.isLoggingIn)\r\n\r\n    const [loginCredentials, setLoginCredentials] = useState({\r\n        username_or_email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        const {name, value} = e.target\r\n        setLoginCredentials({...loginCredentials, [name]: value})\r\n    }\r\n\r\n    const onLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(loginCredentials))\r\n    }\r\n\r\n    return (\r\n        <div className=\"center-body-container\">\r\n           <div className=\"form1\">\r\n                <header className=\"form1-header\">\r\n                    <h1 className=\"form1-header__title\">Login to Jar of Awesome</h1>\r\n                    <div className=\"form1-header__notification\">\r\n                       {loginErrors ? \r\n                            <span style={{color: \"red\"}}>{loginErrors[Object.keys(loginErrors)[0]][0]}</span>\r\n                        :\r\n                        \"Save and relive your most precious memories now!\"\r\n                       } \r\n                    </div>\r\n                </header>\r\n                <form>                   \r\n                    <div className=\"form1-input\">\r\n                        \r\n                        <input type=\"text\" name=\"username_or_email\" id=\"username_or_email\" onChange={onChange} value={loginCredentials.username_or_email} required/>       \r\n                        <label htmlFor=\"username_or_email\">Username or Email</label>           \r\n                    </div>\r\n                    <div className=\"form1-input\">                      \r\n                        <input id=\"password\" type=\"text\" name=\"password\" onChange={onChange} value={loginCredentials.password}  required/>   \r\n                        <label htmlFor=\"password\" >Password</label>       \r\n                    </div>\r\n\r\n                    <button className=\"form1-button\" onClick={onLogin} disabled={isLoggingIn}>\r\n                        Login\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\Homepage.page.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\Signup.page.js",["126","127"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch, useStore} from \"react-redux\"\r\nimport {signupUser} from \"../redux/accounts/accounts.actions\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport \"../styles/components/login.scss\"\r\n\r\n\r\nconst EMPTY_SIGNUP_DATA = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\"\r\n}\r\n\r\nconst SignupPage = () => {\r\n    const dispatch = useDispatch()\r\n    const [signupData, setSignupData] = useState(EMPTY_SIGNUP_DATA)\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const signupErrors = useSelector((state) => state.accountsReducer.signupErrors)\r\n    const isSigningUp = useSelector(({accountsReducer}) => accountsReducer.isSigningUp);\r\n    const createdUser = useSelector(({accountsReducer}) => accountsReducer.createdUser);\r\n\r\n    useEffect(() => {\r\n        if(signupErrors){\r\n            const first = Object.keys(signupErrors)[0]\r\n            setErrorMessage(signupErrors[first][0])\r\n        }else{\r\n            setErrorMessage(null)\r\n        }\r\n\r\n        return () => setErrorMessage(null)\r\n    },[signupErrors])\r\n\r\n\r\n    useEffect(() => {\r\n        if(createdUser){\r\n            setSignupData(EMPTY_SIGNUP_DATA)\r\n        }\r\n    }, [createdUser])\r\n\r\n\r\n\r\n    const onSignup = (e) => {\r\n        e.preventDefault();\r\n       const {username, email, password, confirm_password} = signupData\r\n\r\n       // check if all fields are not empty\r\n       if(!username || !email || !password || !confirm_password){\r\n        setErrorMessage(\"Fields can not be empty.\")\r\n        return;\r\n       }\r\n\r\n       // check if passwords match\r\n       if(password != confirm_password){\r\n           setErrorMessage(\"Password do not match.\")\r\n           return;\r\n       }\r\n\r\n       dispatch(signupUser({\r\n           username,\r\n           email,\r\n           password\r\n       }))\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setErrorMessage(null)\r\n        const {name, value} = e.target\r\n        setSignupData({...signupData, [name]: value})\r\n    }\r\n\r\n    return (\r\n        <div className=\"center-body-container\">\r\n        <div className=\"form1\">\r\n             <header className=\"form1-header\">\r\n                 <h1 className=\"form1-header__title\">Signup to Jar of Awesome</h1>\r\n                 <div className=\"form1-header__notification\">\r\n\r\n                     {createdUser ? \r\n                        <span>User \"{createdUser}\" was successfull created. <Link to=\"/login\" className=\"form1-header__notifiction-link\">Login now !</Link></span>\r\n                        : errorMessage ? \r\n                        <span style={{color: \"red\"}}>{errorMessage}</span> \r\n                        :\r\n                        \"Save and relive your most precious memories now!\"\r\n                    }\r\n                     \r\n                 </div>\r\n             </header>\r\n             <form>                   \r\n                 <div className=\"form1-input\">                    \r\n                     <input type=\"text\" name=\"username\" id=\"username\" onChange={onChange} value={signupData.username} required/>       \r\n                     <label htmlFor=\"username\">Username</label>           \r\n                 </div>\r\n\r\n                 <div className=\"form1-input\">           \r\n                     <input id=\"email\" type=\"text\" name=\"email\" onChange={onChange} value={signupData.email} required/>   \r\n                     <label htmlFor=\"email\">Email</label>       \r\n                 </div>\r\n                 <div className=\"form1-input\">           \r\n                     <input id=\"password\" type=\"password\" name=\"password\" onChange={onChange} value={signupData.password} required/>   \r\n                     <label htmlFor=\"password\">Password</label>       \r\n                 </div>\r\n\r\n                 <div className=\"form1-input\">           \r\n                     <input id=\"confirm_password\" type=\"password\" name=\"confirm_password\" onChange={onChange} value={signupData.confirm_password}   required/>   \r\n                     <label htmlFor=\"confirm_password\">Confirm Password</label>       \r\n                 </div>\r\n\r\n                 <button className=\"form1-button\" onClick={onSignup} disabled={isSigningUp}>\r\n                     Signup\r\n                 </button>\r\n             </form>\r\n\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default SignupPage","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\Header.component.jsx",["128"],"import React from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\nimport {logoutUser} from \"../redux/accounts/accounts.actions\"\r\n\r\nimport \"../styles/components/header.scss\";\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const isLoggedIn = useSelector(({accountsReducer}) => !!accountsReducer.authToken)\r\n    const user = useSelector(({accountsReducer}) => accountsReducer.user)\r\n\r\n    console.log(user)\r\n  \r\n\r\n\r\n    const onLogout = () => {\r\n        dispatch(logoutUser())\r\n    }\r\n\r\n    return (\r\n        <header className=\"main-header\">\r\n            <div className=\"body-container main-header__container\">\r\n                <Link to=\"/\"className=\"main-header__title\">Jar of Awesome</Link>\r\n\r\n                <nav className=\"main-header__nav\">\r\n                    <Link to=\"/\" className=\"main-header__nav-link\">Discover</Link>\r\n                    {!isLoggedIn ? \r\n                        <React.Fragment>\r\n                            <Link to=\"/login\" className=\"main-header__nav-link\">Login</Link>\r\n                            <Link to=\"/signup\" className=\"main-header__nav-link\">Signup</Link>\r\n                            \r\n                        </React.Fragment>\r\n                    :\r\n                        <React.Fragment>\r\n                            <Link to={`/users/${user.user_id || user.id}/memories`} className=\"main-header__nav-link\">My Memories</Link>\r\n                            <Link to=\"/\" className=\"main-header__nav-link\">Profile</Link>\r\n                            <a onClick={onLogout} className=\"main-header__nav-link\">Logout</a>\r\n                        </React.Fragment>\r\n                    }        \r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\store.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\root-reducer.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\accounts\\accounts.reducer.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\accounts\\accounts.constants.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\accounts\\accounts.actions.js",["129"],"import CONST from \"./accounts.constants\"\r\nimport {saveAuthToken, removeAuthToken} from \"../../utils/jwt\"\r\nimport history from \"../../utils/history\"\r\n\r\nconst BASE_API_URL = \"http://127.0.0.1:8000/api/\"\r\n\r\nconst SIGNUP_USER_URL = BASE_API_URL + \"users/\"\r\nconst LOGIN_USER_URL = BASE_API_URL + \"users/login/\"\r\nconst REFRESH_TOKEN_URL = BASE_API_URL + \"refresh_token/\" // ???\r\n\r\n\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    dispatch({\r\n        type: \"USER_LOGOUT\"\r\n    })\r\n    removeAuthToken();\r\n    // go to login page\r\n}\r\n\r\nexport const loginUser = (userCredentials) => async (dispatch) => {\r\n    dispatch(loginUserStart())\r\n\r\n    try{\r\n        const response = await fetch(LOGIN_USER_URL, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(userCredentials),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n        const json = await response.json()\r\n        console.log(json)\r\n        if(response.status >= 400){\r\n            console.error(`${response.status}: ${response.statusText}`)\r\n            dispatch(loginUserError(json))\r\n        }else{\r\n            // save token\r\n            saveAuthToken(json.token)\r\n            dispatch(loginUserSuccess(json))\r\n\r\n            // push history => \r\n            history.push(\"/\")\r\n        }\r\n        \r\n      \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst loginUserStart = () => ({\r\n    type: CONST.USER_LOGIN_START\r\n})\r\n\r\nconst loginUserSuccess= (user) => ({\r\n    type: CONST.USER_LOGIN_SUCCESS,\r\n    payload: user\r\n})\r\n\r\nconst loginUserError = (errors) => ({\r\n    type: CONST.USER_LOGIN_ERROR,\r\n    payload: errors\r\n})\r\n\r\nexport const signupUser = (userData) => async (dispatch) => {\r\n    dispatch(singupUserStart())\r\n\r\n    console.log(userData)\r\n    try{\r\n        const response = await fetch(SIGNUP_USER_URL, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(userData),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n        })\r\n        const json = await response.json()\r\n        console.log(json)\r\n        if(response.status >= 400){\r\n            console.error(`${response.status}: ${response.statusText}`)\r\n            dispatch(singupUserError(json))\r\n        }else{\r\n            dispatch(singupUserSuccess(json.username))\r\n        }\r\n        \r\n      \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst singupUserSuccess = (username) => ({\r\n    type: CONST.USER_SIGNUP_SUCCESS,\r\n    payload: username\r\n})\r\n\r\nconst singupUserError = (errors) => ({\r\n    type: CONST.USER_SIGNUP_ERROR,\r\n    payload: errors\r\n})\r\n\r\n\r\nconst singupUserStart= () => ({\r\n    type: CONST.USER_SIGNUP_START\r\n})\r\n\r\n\r\n\r\n","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\utils\\jwt.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\CreateMemoryShortcut.component.jsx",["130","131","132"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {createMemory} from \"../redux/memories/memories.actions\"\r\n\r\nimport \"../styles/components/create-memory.scss\"\r\n\r\n\r\nconst EMPTY_MEMORY_DATA = {\r\n    title: \"\",\r\n    date: \"\",\r\n}\r\n\r\n\r\nDate.prototype.toDateInputValue = (function() {\r\n    var local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n    return local.toJSON().slice(0,10);\r\n});\r\n\r\nconst getCurrentDate = () => {\r\n    return new Date().toDateInputValue()\r\n}\r\n\r\nconst CreateMemoryShortcut = () => {\r\n    const [memoryData, setMemoryData] = useState(EMPTY_MEMORY_DATA)\r\n\r\n\r\n    const {pending, errors} = useSelector(({memoriesReducer}) => memoriesReducer.createMemory)\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"hello\")\r\n       setMemoryData({...memoryData, date: getCurrentDate()})\r\n    }, [])\r\n\r\n\r\n   \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = (e) => {\r\n        const {name, value} = e.target\r\n        setMemoryData({...memoryData, [name]: value})\r\n    }\r\n\r\n    const onCreateMemory = (e) => {\r\n        e.preventDefault();\r\n        console.log(memoryData)\r\n\r\n        dispatch(createMemory(memoryData))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container create-memory\">\r\n            <input type=\"text\" placeholder=\"title\" name=\"title\" onChange={onChange} value={memoryData.title}/>      \r\n            <input type=\"date\" name=\"date\" onChange={onChange} value={memoryData.date}/>\r\n            <button onClick={onCreateMemory} disabled={pending}>Create new Memory</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMemoryShortcut","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\RandomMemory.component.jsx",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\EditMemory.page.js",["133","134","135"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faImage } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\n\r\nimport {getMemory} from \"../redux/memories/actions\"\r\n\r\nimport DeleteMemoryButton from \"../components/DeleteMemoryButton.component\"\r\n\r\n// private: only you\r\n// only: friends\r\n// public: everbody\r\n// via link\r\n\r\nimport \"../styles/components/memory-editor.scss\"\r\n\r\nconst EditMemoryPage = ({match}) => {\r\n    const dispatch = useDispatch()\r\n    const memoryId = match.params.id\r\n    const memory = useSelector(({memoriesReducer}) => memoriesReducer.memories[memoryId] ? memoriesReducer.memories[memoryId] : null)\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        title: \"\", \r\n        image: null,\r\n        date: \"\",\r\n        tags: \"\",\r\n        content: \"\",\r\n        viewing_permissions: \"\"\r\n    })\r\n    \r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n       // load memory\r\n       dispatch(getMemory(memoryId))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // load memory\r\n        setFormData({...formData, ...memory})\r\n     }, [memory])\r\n\r\n    const onAddImage = (e) => {\r\n        setExpanded(true)\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const {name, value} = e.target\r\n        setFormData({...formData, [name]: value})\r\n    }\r\n\r\n    return (\r\n        <div className=\"container container--800\">\r\n            <form className=\"memory-editor\">\r\n                <div className=\"memory-editor__header\">\r\n                    <div className=\"memory-editor__headline\">\r\n                        <h1>Edit / Delete Memory</h1>\r\n\r\n                        <DeleteMemoryButton isDeleting={memory ? memory.deletePending : false} memoryId={memory ? memory.id : null}/>\r\n                \r\n                    </div>\r\n                    <input type=\"text\" placeholder=\"title\" name=\"title\" value={formData.title} onChange={onChange}/>\r\n\r\n                    <div className=\"memory-editor__row\">\r\n                        <input name=\"date\" type=\"date\" value={formData.date} onChange={onChange}/>\r\n                        <select name=\"viewing_permissions\" value={formData.viewing_permissions} onChange={onChange}>\r\n                            <option value=\"PR\">private</option>\r\n                            <option value=\"FO\">friends only</option>\r\n                            <option value=\"PU\">public</option>            \r\n                        </select>\r\n                    </div>\r\n\r\n                    <button className=\"button button--full button--success\">Update Memory</button>\r\n                </div>\r\n                <div>\r\n                    <label className={`image-input ${expanded && \"image-input--filled\"}`}>\r\n                        <input type=\"file\" onChange={onAddImage} />\r\n\r\n                        <div className=\"image-input__center\">\r\n                            Add Feature Image\r\n                            <FontAwesomeIcon icon={faImage} size=\"2x\" />\r\n                        </div>\r\n                        \r\n                    </label>\r\n                    <input type=\"text\" placeholder=\"tags\" />\r\n                 \r\n                    <textarea placeholder=\"Notes\">\r\n\r\n                    </textarea>\r\n                    <button className=\"button button--full button--success\">Update Memory</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemoryPage","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\memories.constants.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\memories.actions.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\utils\\history.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\pages\\UserMemories.page.js",["136"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {getUserMemories} from \"../redux/memories/memories.actions\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst UserMemories = ({match}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userid = match.params.uuid\r\n    const {pending, errors, memories: userMemories} = useSelector(({memoriesReducer}) => {\r\n        return memoriesReducer.usersMemories[userid] ? memoriesReducer.usersMemories[userid] : {\r\n            pending: false,\r\n            errors: null,\r\n            memories: []\r\n        } \r\n    })\r\n\r\n    const memories = useSelector(({memoriesReducer}) => memoriesReducer.memories)\r\n\r\n    console.log(pending)\r\n    console.log(errors)\r\n    console.log(memories)\r\n  \r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(getUserMemories(userid, {}))\r\n    }, [])\r\n\r\n    \r\n   \r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Memories of User</h1>\r\n\r\n            <div>\r\n              {userMemories.map(userMemoryId => {\r\n                  const memory = memories[userMemoryId]\r\n                  return (<div><Link to={`/memories/${memory.id}`}>{memory.title}</Link></div>)\r\n              })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserMemories","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\index.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\usersMemories.reducer.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\memories.reducer.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\reducers\\createMemory.reducer.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\actions\\index.js",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\actions\\getMemory.js",["137"],"import CONST, {URLS} from \"../memories.constants\"\r\nimport {getAuthToken} from \"../../../utils/jwt\"\r\n\r\n\r\nconst getMemory = memoryId => async dispatch => {\r\n    console.log(\"hell\")\r\n\r\n    dispatch(getMemoryStart())\r\n    const url = URLS.getMemoryUrl(memoryId)\r\n    console.log(url)\r\n\r\n    try{\r\n        const response = await fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                //'Authorization': 'JWT ' + getAuthToken()\r\n            },\r\n        })\r\n\r\n        const json = await response.json()\r\n      \r\n        console.log(json)\r\n        if(response.status <=400){\r\n            console.log(\"success\")\r\n            dispatch(getMemorySuccess(json))\r\n         \r\n        }else{\r\n            console.error(`${response.status}: ${response.statusText}`)\r\n            dispatch(getMemoryError(json))\r\n        }\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst getMemoryStart = () => ({\r\n    type: CONST.GET_MEMORY_START,\r\n})\r\n\r\nconst getMemoryError = (errors) => ({\r\n    type: CONST.GET_MEMORY_ERROR,\r\n    errors: errors\r\n})\r\n\r\nconst getMemorySuccess = (memory) => ({\r\n    type: CONST.GET_MEMORY_SUCCESS,\r\n    payload: memory\r\n})\r\n\r\nexport default getMemory","D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\components\\DeleteMemoryButton.component.jsx",[],"D:\\dev\\webdev\\portfolio\\jarofawesom2\\frontend\\src\\redux\\memories\\actions\\deleteMemory.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":26,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"142","severity":1,"message":"146","line":2,"column":35,"nodeType":"144","messageId":"145","endLine":2,"endColumn":43},{"ruleId":"147","severity":1,"message":"148","line":57,"column":20,"nodeType":"149","messageId":"150","endLine":57,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":41,"column":29,"nodeType":"153","endLine":41,"endColumn":85},{"ruleId":"142","severity":1,"message":"154","line":9,"column":7,"nodeType":"144","messageId":"145","endLine":9,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":15,"column":1,"nodeType":"157","messageId":"150","endLine":19,"endColumn":3},{"ruleId":"142","severity":1,"message":"158","line":29,"column":21,"nodeType":"144","messageId":"145","endLine":29,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":35,"column":8,"nodeType":"161","endLine":35,"endColumn":10,"suggestions":"162"},{"ruleId":"142","severity":1,"message":"163","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":20},{"ruleId":"159","severity":1,"message":"164","line":42,"column":8,"nodeType":"161","endLine":42,"endColumn":10,"suggestions":"165"},{"ruleId":"159","severity":1,"message":"166","line":47,"column":9,"nodeType":"161","endLine":47,"endColumn":17,"suggestions":"167"},{"ruleId":"159","severity":1,"message":"168","line":28,"column":8,"nodeType":"161","endLine":28,"endColumn":10,"suggestions":"169"},{"ruleId":"142","severity":1,"message":"170","line":2,"column":9,"nodeType":"144","messageId":"145","endLine":2,"endColumn":21},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useStore' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'REFRESH_TOKEN_URL' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'memoryData'. Either include it or remove the dependency array. You can also do a functional update 'setMemoryData(m => ...)' if you only need 'memoryData' in the 'setMemoryData' call.","ArrayExpression",["173"],"'faTrashAlt' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'memoryId'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["175"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userid'. Either include them or remove the dependency array.",["176"],"'getAuthToken' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [memoryData]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, memoryId]",{"range":"187","text":"188"},"Update the dependencies array to be: [formData, memory]",{"range":"189","text":"190"},"Update the dependencies array to be: [dispatch, userid]",{"range":"191","text":"192"},[905,907],"[memoryData]",[1113,1115],"[dispatch, memoryId]",[1222,1230],"[formData, memory]",[862,864],"[dispatch, userid]"]